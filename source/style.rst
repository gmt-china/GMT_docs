风格指南
========

在用GMT绘图的时候，遵循一定的风格指南，可以让画图的过程更轻松，让脚本更易读、
易改、更健壮、可移植性更高。

使用脚本来执行GMT命令
---------------------

GMT遵循了UNIX的设计思想，将不同的功能分别放在不同的命令中，因而在绘图时需要
执行一系列命令。

若使用命令行来执行一系列命令，很容易弄混前一个命令是什么。将所有的绘图命令放在
脚本中可以很方便地重复执行一系列命令，以对绘图的细节进行微调。

除非是一两个命令就可以解决的图，否则应一律使用脚本而非命令行。

Windows下常用的脚本是bat，Linux常用的是Bash、Perl和Python。使用什么脚本语言
完全依赖于用户个人的需求与喜好，这里以Bash脚本为例，其他脚本同理。

.. code-block:: bash

   #!/bin/bash

   gmt begin map pdf 
   gmt plot ...
   gmt coast ...
   gmt grdimage ...
   gmt plot ...
   gme end

不要跨平台写脚本
----------------

不要在Windows下写Bash脚本然后复制到Linux下运行；也不要在Linux下写Bat脚本放在
Windows下运行。这其中会遇到很多坑，包括但不限于：

- 默认编码不同，Windows用GBK，Linux用UTF8；
- 换行符不同，Windows用 ``\r\n``\ ，Linux用 ``\n``\ ；

如果你真的跨平台写了脚本并遇到各种奇怪的问题时，尝试着新建一个文件，然后把脚本
重新手敲一遍。

使用现代模式
------------

GMT6既支持现代模式也支持经典模式。建议使用现代模式，其语法更简单，也更不容易出错。

使用变量
--------

脚本不仅仅只是将一系列命令放在一个文件而已。绘图时有些需要重复使用的值或文件名，
最好定义成一个变量，以使得脚本更加灵活。

使用SI单位制
------------

GMT支持SI单位制和US单位制，默认是SI单位制。由于GMT的开发者是美国人，官方的文档
使用的是US单位制，因而国内的GMT用户在学习的过程中也就习惯性地使用了US单位制。

实际上，国内用户对于US单位制没有太多的概念， ``-X1i`` 远远没有 ``-X2.5c`` 直观。
SI单位制是国际标准单位，也是中国人熟悉的单位，使用SI单位制会使得微调更简单。

不要依赖于GMT的系统设置
-----------------------

你所写的每一个脚本，将来都可能传给后来人使用，可能在任一台机器上使用。要保证
脚本每次运行的结果完全一致，并不是一个简单的事情。

不要省略单位
~~~~~~~~~~~~

当使用 ``-JM10`` 时，GMT会默认使用当前的系统默认单位（一般来说是 ``c`` ，也就是
厘米），当脚本在另一台系统默认单位为 ``i`` 的机器上运行时，绘图的结果会完全不同。

conf文件的使用
~~~~~~~~~~~~~~

不要手动修改 ``gmt.conf`` 文件！

GMT中提供了 ``gmtset`` 模块可以用于修改缺省参数，比如标题的字体、大小等等。该
命令会在当前工作目录下生成一个 ``gmt.conf`` 文件，进而影响到接下来绘图命令的执行效果。

合理的使用方式如下：

.. code-block:: bash

   #!/bin/bash

   gmt begin map pdf 
   # 用 set 修改默认参数
   gmt set MAP_FRAME_TYPE plain

   # 绘图
   gmt plot ...
   gmt coast ...
   gmt plot ...
   
   gmt end

有这样一种可怕的情况：假如你在 ``$HOME`` 下执行了 ``gmtset`` 命令，然后画了
一个简单的图，但是却忘记删除 ``$HOME`` 下生成的 ``gmt.conf`` 文件，这会影响到
其它目录中几乎所有GMT脚本的执行效果，而且这个问题很难排查。要避免这种情况的发生
需要遵循几个原则：

#. 尽量不要在 ``$HOME`` 下执行GMT命令（可能会产生临时文件，难以清理）
#. 尽量不要使用命令行执行GMT命令（因为你很可能会忘记你刚刚执行过哪些命令）

不要滥用-B选项
--------------

``-B`` 选项用于绘制边框并控制边框的绘制效果，即每个使用 ``-B`` 选项的命令都会
绘制一次边框，在没有使用 ``-X`` 和 ``-Y`` 的情况下，多个命令重复使用 ``-B``
选项会绘制多次边框，但由于边框是重合的，所以会看不出来区别。

对于 ``-B`` 选项，合理的用法是仅在第一个命令中使用。

verbose模式
-----------

GMT命令的输出信息常用于在写脚本时判断命令执行是否正确，而在真正执行时过多的
输出信息反而会扰乱用户的屏幕输出。合理的使用verbose模式的方式有三种：

#. 写脚本时每个命令都加上 ``-V`` 选项，待确认脚本正确无误之后删除所有 ``-V``
#. 定义Verbose变量

   .. code-block:: bash

      V=-V      # 调试时用这个
      #V=       # 调试完成用这个

      gmt begin map pdf
      gmt plot ... $V
      gmt coast ... $V
      gmt plot ... $V
      gmt end

#. 修改缺省参数

   .. code-block:: bash

      gmt begin map pdf
      gmt set GMT_VERBOSE TRUE
      gmt plot ... 
      gmt coast ...
      gmt plot ...
      gmt end

从使用上的简洁来看，最简单的是第三种方法。

慎用-X和-Y
----------

使用这两个选项会导致坐标原点的移动。因而使用的时候需要相当慎重。

#. 除极个别的情况外， ``-X`` 和 ``-Y`` 选项应该仅在绘制组合图（即一张图多个子图）时使用
#. 对于非组合图，也可以在第一个绘图命令中使用 ``-Xc -Yc`` 使得整个绘图框架位于纸张的中央
#. 不要仅仅为了将某个符号或文字移动到某个位置就使用这两个选项，如果真的有这种
   需求的话，应该使用绝对坐标 ``-Xa1c -Ya1c`` ，其仅影响当前命令的绘图位置

网格文件后缀
------------

GMT主要使用netCDF格式作为网格数据的格式，其标准后缀名为 ``.nc`` 。

需要注意以下两个事实：

#. GMT不会对后缀进行检测，所以后缀是什么都不重要
#. GMT之前的版本中曾经自定义了一种网格数据格式，并使用后缀 ``.grd`` ，因而很多
   脚本中都使用了 ``.grd`` 作为后缀。
