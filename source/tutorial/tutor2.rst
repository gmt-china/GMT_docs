入门示例2
=========

这一节将通过绘制震中到台站的大圆路径来介绍GMT的模块化作图和图层的思想，同时简单介绍
``plot`` 和 ``text`` 模块的功能。
希望初学者在这里注意，模块化作图和图层是GMT的核心思想。

GMT模块化作图
-------------

一副完整的图画是由很多部分组成的。GMT的一个模块只绘制张图的一部分，因而通常一张图需要
使用多个GMT命令才能绘制完成。
绘制的过程中，若想修改某部分，只需修改绘制该部分所使用的命令即可，
而不会影响其他部分。这就是模块化作图。

下图是我们想要绘制的图的最终效果。首先要将这个稍复杂的图分解成若干个部分：
底图（海岸线）、震中位置（五角星）、台站位置（三角形）、大圆路径（大圆弧线段）
以及台站名。

.. figure:: /images/GMT_tutor2_5.*
   :width: 100%
   :align: center

下面会一步步地把整张图绘制出来。

绘制底图
--------

上一节已经介绍了如何画全球地图，所以我们很容易就用 ``coast`` 模块把底图绘制出来。

.. literalinclude:: /scripts/GMT_tutor2_1.sh
   :language: bash
   :lines: 2

解释一下：

#. ``-JH110/24c`` 表示使用Hammer投影，投影中心为110度，整张图宽度为 ``24c``
#. ``-Rg`` 相当于 ``-R0/360/-90/90`` 即绘制全球范围
#. ``-Glightgreen`` 表示将陆地填充浅绿色， ``-Slightblue`` 表示将海洋填充浅蓝色

效果如图

.. figure:: /images/GMT_tutor2_1.*
   :width: 100%
   :align: center

绘制震中和台站位置
------------------

一般用五角星表示震中，三角形表示台站。五角星和三角形这样的图案用 ``plot``
模块绘制，见下面的代码和结果：

.. literalinclude:: /scripts/GMT_tutor2_2.sh
   :language: bash

.. figure:: /images/GMT_tutor2_2.*
   :width: 100%
   :align: center

解释一下：

#. 第一个 ``plot`` 命令用于绘制震中位置，第二个则用于绘制台站位置
#. ``-S`` 表示要绘制符号。 ``-Sa/0.5c`` 表示绘制大小为 0.5厘米的五角星，
   ``-St0.2c`` 表示绘制大小为0.2厘米的三角形
#. ``-W`` 表示画笔的属性，这里用于指定用什么样的画笔绘制三角形或五角星的轮廓。
   ``-W0.5p,black,solid`` 的意思是画笔 ``0.5p`` 宽，黑色，实心。
#. ``-G`` 表示颜色填充，后面跟颜色的名字；``-Gblack`` 表示填充黑色；
   ``-Gyellow`` 表示填充黄色。
#. 确定了画什么样的符号，还要确定在哪里画。两个 ``EOF`` 之间的是命令的输入数据，
   在这里就是位置信息，一行代表一个位置。默认情况下，GMT认为第一个数是经度，第二个是纬度。

绘制大圆路径
------------

``plot`` 模块除了绘制符号，也绘制线条。下面我们用 ``plot`` 给图画加上大圆路径。
``plot`` 会自动用大圆路径连接地球上的两个位置，不需要额外设置。首先直接看代码：

.. literalinclude:: /scripts/GMT_tutor2_3.sh
   :language: bash

用于绘制射线路径的 ``plot`` 命令和之前的命令的区别在于没有了 ``-S`` 和 ``-G`` 选项。
为了绘制一条线段，至少需要指定两个端点，输入数据中每个 ``>`` 之后的两行数据分别
代表一条线条的两个端点位置。结果如下：

.. figure:: /images/GMT_tutor2_3.*
   :width: 100%
   :align: center


添加台站名
----------

最后还需要往图画里添加台站所在地区的名字。添加文字使用 ``text`` 模块：

.. literalinclude:: /scripts/GMT_tutor2_4.sh
   :language: bash

.. figure:: /images/GMT_tutor2_4.*
   :width: 100%
   :align: center

解释如下：

#. ``EOF`` 之间的每一行依次是加入的文本的纬度、经度和内容，这与 ``plot`` 类似，
   只是因为有文本内容，所以多了一列。之所以没有写在一个 ``text`` 命令之下，
   是因为不同位置的文本的具体位置需要些许不同的调整，你可以看到每个 ``text``
   命令的 ``-D`` 参数些许不同，下面会详细解释。
#. ``-F`` 控制文本的字体、对齐方式等属性； ``+f10p,1,black`` 表示使用大小为
   ``10p`` 的黑色1号字体； ``+j`` 是控制文本的对齐方式， ``TL`` 表示输入数据
   中的经纬度坐标是文本块的左上角， ``L`` 指左， ``T`` 指上， ``LT`` 和 ``TL``
   的含义完全一样。
#. ``-D`` 是在上述坐标的基础上微调。 ``-D-1.5c/-0.15c`` 是说向左移动1.5厘米，
   向下移动0.15厘米。

图层的概念
----------

一条GMT绘图命令画出一部分图形，后面的命令画出的东西就盖在前面的命令画出的东西上。
也就是说，每一个GMT命令产生一个图层，后面的就盖在前面的上面。简单的说就是后来者居上。
看我们刚刚画的图，因为震中的黄色五角星先画所以被大圆路径盖住了（其实，地名的
三角形也是，只是因为大圆路径没有那么多所以不明显）。我们可以调换代码的顺序，
就可以把射线的图层放到最下面：

.. literalinclude:: /scripts/GMT_tutor2_5.sh
   :language: bash

.. figure:: /images/GMT_tutor2_5.*
   :width: 100%
   :align: center

需要注意的是，本节内容仅作演示用，实际绘图时通常会写脚本来处理自己的数据，
以使得其符合GMT输入数据的要求，而不是像本节示例中这样手写所有的数据。
